<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title><%- title %></title>
<link rel="icon" type="image/png" href="/favicon.png">
<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="//fonts.googleapis.com/icon?family=Material+Icons">
<link rel="stylesheet" href="//code.getmdl.io/1.3.0/material.indigo-blue.min.css" />
<script defer src="//code.getmdl.io/1.3.0/material.min.js"></script>
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.9.0/styles/googlecode.min.css">
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/KaTeX/0.7.1/katex.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/github-markdown-css/2.2.1/github-markdown.css"/>
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/codemirror/5.23.0/codemirror.min.css">
<link rel="stylesheet" href="/css/custom.css">

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/codemirror/5.23.0/codemirror.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/codemirror/5.23.0/addon/mode/overlay.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/codemirror/5.23.0/mode/markdown/markdown.min.js"></script>    
<script src="//cdnjs.cloudflare.com/ajax/libs/codemirror/5.23.0/mode/gfm/gfm.min.js"></script>    
<script src="//cdnjs.cloudflare.com/ajax/libs/codemirror/5.23.0/addon/edit/continuelist.min.js"></script>    
<script src="//cdnjs.cloudflare.com/ajax/libs/codemirror/5.23.0/addon/edit/matchbrackets.min.js"></script>
</head>
<body>
<div id="in">
  <form id="form" action="/post" method="post">
    <div class="form-group row">
      <div class="col-sm-6">
        <input type="text" name="title" class="form-control" placeholder="Title" <% if(title) { %>value="<%- title %>"<% } %>>
      </div>
      <div class="col-sm-3">
        <input type="text" name="entry" class="form-control" placeholder="Entry Name" <% if(entry) { %>value="<%- entry %>"<% } %>>
      </div>
      <div class="col-sm-2">
      <input type="text" name="category" class="form-control" placeholder="Category" <% if(entry) { %>value="<%- category %>"<% } %>>
      </div>
    <button type="submit" class="btn btn-primary">Save</button>
    </div>
    <div id="editorBody">
      <div id="editorMarkdown">
        <textarea id="code" name="markdown"><%- main %></textarea>
      </div>
      <div id="preview" class="markdown-body"></div>
    </div>
  </form>
</div>
</div>
<script src="/bundle.js"></script>
<script>
  var editor = CodeMirror.fromTextArea(document.getElementById("code"), {
    mode: 'gfm',
    theme: "default",
    lineNumbers: true,
    lineWrapping: true,
    matchBrackets: true,
    extraKeys: {
        "Enter": "newlineAndIndentContinueMarkdownList",
        "Tab": function (cm) {
            var tab = '\t';
            var spaces = Array(parseInt(cm.getOption("indentUnit")) + 1).join(" ");
            //auto indent whole line when in list or blockquote
            var cursor = cm.getCursor();
            var line = cm.getLine(cursor.line);
            var regex = /^(\s*)(>[> ]*|[*+-]\s|(\d+)([.)]))/;
            var match;
            var multiple = cm.getSelection().split('\n').length > 1 || cm.getSelections().length > 1;
            if (multiple) {
                cm.execCommand('defaultTab');
            } else if ((match = regex.exec(line)) !== null) {
                var ch = match[1].length;
                var pos = {
                    line: cursor.line,
                    ch: ch
                };
                if (cm.getOption('indentWithTabs'))
                    cm.replaceRange(tab, pos, pos, '+input');
                else
                    cm.replaceRange(spaces, pos, pos, '+input');
            } else {
                if (cm.getOption('indentWithTabs'))
                    cm.execCommand('defaultTab');
                else {
                    cm.replaceSelection(spaces);
                }
            }
        },
    }
  });

  $(document).ready(function(){
    update_view();
  });

  var preview = document.getElementById("preview");
  var timeoutId;
  editor.on("change", function(cMirror) {
      clearTimeout(timeoutId);
      timeoutId = setTimeout(function() {
        cMirror.save();
        update_view();
      }, 800);
  });

  editor.on("scroll" , function(e){
      var scrollInfo = e.getScrollInfo();
      var lineNumber = e.lineAtHeight(scrollInfo.top, 'local');
      var lineHeight = e.lineAtHeight(scrollInfo.height, 'local');
      var range = e.getRange({line: 0, ch: null}, {line: lineNumber, ch: null});
      var parser = new DOMParser();
      var doc = parser.parseFromString(md_render(range), 'text/html');
      var totalLines = doc.body.querySelectorAll('p, h1, h2, h3, h4, h5, h6, li, pre, blockquote, hr, table, dt, dd');
      var elems = preview.querySelectorAll('p, h1, h2, h3, h4, h5, h6, li, pre, blockquote, hr, table, dt, dd');
      if(lineNumber > lineHeight - 30) {
          preview.scrollTop = elems[elems.length-1].offsetTop;
      } else if (elems.length > 0) {
          preview.scrollTop = elems[totalLines.length].offsetTop;
      }
  });
</script>
</body>
</html>
